nextflow_process {

    name "Test Process UNTAR"
    script "../main.nf"
    process "UNTAR"
    tag "modules"
    tag "modules_nfcore"
    tag "untar"

    test("test_untar") {

        when {
            process {
                """
                input[0] = [ [], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/kraken2.tar.gz', checkIfExists: true) ]
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }
    }

    test("test_untar_onlyfiles") {

        when {
            process {
                """
                input[0] = [ [], file(params.modules_testdata_base_path + 'generic/tar/hello.tar.gz', checkIfExists: true) ]
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }
    }

    test("test_untar - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/kraken2.tar.gz', checkIfExists: true) ]
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }
    }

    test("test_untar_onlyfiles - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [], file(params.modules_testdata_base_path + 'generic/tar/hello.tar.gz', checkIfExists: true) ]
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }
    }
}
