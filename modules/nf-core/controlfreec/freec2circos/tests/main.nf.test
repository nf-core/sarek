nextflow_process {

    name "Test Process CONTROLFREEC_FREEC2CIRCOS"
    script "../main.nf"
    process "CONTROLFREEC_FREEC2CIRCOS"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "controlfreec"
    tag "controlfreec/freec2circos"
    tag "controlfreec/freec"
    tag "untar"

    setup {

        run("UNTAR") {
                script "../../../../nf-core/untar/main.nf"
                process {
                    """
                    input[0] =  [ [],
                                file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/chromosomes.tar.gz', checkIfExists: true)
                            ]
                    """
                }
        }

        run("CONTROLFREEC_FREEC") {
                script "../../../../nf-core/controlfreec/freec/main.nf"
                process {
                    """
                    input[0] =  [ [ id:'test', single_end:false, sex:'XX' ], // meta map
                                file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/mpileup/test.mpileup.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/mpileup/test2.mpileup.gz', checkIfExists: true),
                                [],[],[],[]
                            ]
                    // fasta
                    input[1] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                    // fai
                    input[2] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta.fai', checkIfExists: true)
                    // snp_position
                    input[3] = []
                    // known_snps
                    input[4] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz', checkIfExists: true)
                    // known_snps_tbi
                    input[5] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz.tbi', checkIfExists: true)
                    // chr_directory
                    input[6] = UNTAR.out.untar.map{ it[1] }
                    // mappability
                    input[7] = []
                    // target_bed
                    input[8] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed', checkIfExists: true)
                    // gccontent_profile
                    input[9] = []
                    """
                }
        }

    }

    test("human - freec_ratio") {

        when {
            process {
                """
                input[0] = CONTROLFREEC_FREEC.out.ratio
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(path(process.out.circos.get(0).get(1)).readLines()[0]).match() },
                { assert snapshot(process.out.versions).match("version") }
            )
        }

    }

    // test("human - freec_ratio - single") {

    //     config "./nextflow.config"

    //     setup {

    //         run("CONTROLFREEC_FREEC") {
    //             script "../../../../nf-core/controlfreec/freec/main.nf"
    //             process {
    //                 """
    //                 input[0] =  [ [ id:'test', single_end:false, sex:'XX' ], // meta map
    //                             [],
    //                             file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/mpileup/test2.mpileup.gz', checkIfExists: true),
    //                             [],[],[],[]
    //                         ]
    //                 // fasta
    //                 input[1] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
    //                 // fai
    //                 input[2] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta.fai', checkIfExists: true)
    //                 // snp_position
    //                 input[3] = []
    //                 // known_snps
    //                 input[4] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz', checkIfExists: true)
    //                 // known_snps_tbi
    //                 input[5] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz.tbi', checkIfExists: true)
    //                 // chr_directory
    //                 input[6] = UNTAR.out.untar.map{ it[1] }
    //                 // mappability
    //                 input[7] = []
    //                 // target_bed
    //                 input[8] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed', checkIfExists: true)
    //                 // gccontent_profile
    //                 input[9] = []
    //                 """
    //             }
    //         }

    //     }

    //     when {
    //         process {
    //             """
    //             input[0] = CONTROLFREEC_FREEC.out.ratio
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert snapshot(process.out).match() }
    //         )
    //     }

    // }

    test("human - freec_ratio - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = CONTROLFREEC_FREEC.out.ratio
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
