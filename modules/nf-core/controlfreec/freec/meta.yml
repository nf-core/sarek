name: controlfreec_freec
description: Copy number and genotype annotation from whole genome and whole exome
  sequencing data
keywords:
  - cna
  - cnv
  - somatic
  - single
  - tumor-only
tools:
  - controlfreec/freec:
      description: Copy number and genotype annotation from whole genome and whole exome
        sequencing data.
      homepage: http://boevalab.inf.ethz.ch/FREEC
      documentation: http://boevalab.inf.ethz.ch/FREEC/tutorial.html
      tool_dev_url: https://github.com/BoevaLab/FREEC/
      doi: "10.1093/bioinformatics/btq635"
      licence: ["GPL >=2"]
      identifier: ""
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - mpileup_normal:
        type: file
        description: miniPileup file
        ontologies: []
    - mpileup_tumor:
        type: file
        description: miniPileup file
        ontologies: []
    - cpn_normal:
        type: file
        description: Raw copy number profiles (optional)
        pattern: "*.cpn"
        ontologies: []
    - cpn_tumor:
        type: file
        description: Raw copy number profiles (optional)
        pattern: "*.cpn"
        ontologies: []
    - minipileup_normal:
        type: file
        description: miniPileup file from previous run (optional)
        pattern: "*.pileup"
        ontologies: []
    - minipileup_tumor:
        type: file
        description: miniPileup file from previous run (optional)
        pattern: "*.pileup"
        ontologies: []
  - fasta:
      type: file
      description: Reference file (optional; required if args 'makePileup' is set)
      pattern: "*.{fasta,fna,fa}"
      ontologies: []
  - fai:
      type: file
      description: Fasta index
      pattern: "*.fai"
      ontologies: []
  - snp_position:
      type: file
      description: Path to a BED or VCF file with SNP positions to create a mini pileup
        file from the initial BAM file provided in mateFile (optional)
      pattern: "*.{bed,vcf}"
      ontologies: []
  - known_snps:
      type: file
      description: File with known SNPs
      pattern: "*.{vcf,vcf.gz}"
      ontologies: []
  - known_snps_tbi:
      type: file
      description: Index of known_snps
      pattern: "*.tbi"
      ontologies: []
  - chr_directory:
      type: file
      description: Path to directory with chromosome fasta files (optional, required
        if gccontentprofile is not provided)
      pattern: "*/"
      ontologies: []
  - mappability:
      type: file
      description: Contains information of mappable positions (optional)
      pattern: "*.gem"
      ontologies: []
  - target_bed:
      type: file
      description: Sorted bed file containing capture regions (optional)
      pattern: "*.bed"
      ontologies: []
  - gccontent_profile:
      type: file
      description: File with GC-content profile
      ontologies: []
output:
  bedgraph:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_ratio.BedGraph":
          type: file
          description: Bedgraph format for the UCSC genome browser
          pattern: ".bedgraph"
          ontologies: []
  control_cpn:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_control.cpn":
          type: file
          description: files with raw copy number profiles
          pattern: "*_control.cpn"
          ontologies: []
  sample_cpn:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_sample.cpn":
          type: file
          description: files with raw copy number profiles
          pattern: "*_sample.cpn"
          ontologies: []
  gcprofile_cpn:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - GC_profile.*.cpn:
          type: file
          description: file with GC-content profile.
          pattern: "GC_profile.*.cpn"
          ontologies: []
  BAF:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_BAF.txt":
          type: file
          description: file B-allele frequencies for each possibly heterozygous SNP
            position
          pattern: "*_BAF.txt"
          ontologies: []
  CNV:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_CNVs":
          type: file
          description: file with coordinates of predicted copy number alterations.
          pattern: "*_CNVs"
          ontologies: []
  info:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_info.txt":
          type: file
          description: parsable file with information about FREEC run
          pattern: "*_info.txt"
          ontologies: []
  ratio:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_ratio.txt":
          type: file
          description: file with ratios and predicted copy number alterations for each
            window
          pattern: "*_ratio.txt"
          ontologies: []
  config:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - config.txt:
          type: file
          description: Config file used to run Control-FREEC
          pattern: "config.txt"
          ontologies: []
  versions:
    - versions.yml:
        type: file
        description: File containing software versions
        pattern: "versions.yml"
        ontologies:
          - edam: http://edamontology.org/format_3750 # YAML
authors:
  - "@FriederikeHanssen"
maintainers:
  - "@FriederikeHanssen"
