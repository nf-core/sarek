nextflow_process {

    name "Test Process SENTIEON_BWAMEM"
    tag "modules_nfcore"
    tag "modules"
    tag "sentieon"
    tag "bwamem"
    tag "bwaindex"
    tag "sentieon/bwaindex"
    tag "sentieon/bwamem"

    script "../main.nf"
    process "SENTIEON_BWAMEM"

    test("Single-End") {
        config "./nextflow.config"

        setup {
            run("SENTIEON_BWAINDEX") {
                script "../../bwaindex/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = SENTIEON_BWAINDEX.out.index
                input[2] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                input[3] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Single-End Output CRAM") {
        config "./nextflow_out_cram.config"

        setup {
            run("SENTIEON_BWAINDEX") {
                script "../../bwaindex/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = SENTIEON_BWAINDEX.out.index
                input[2] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                input[3] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Paired-End") {
        config "./nextflow.config"

        setup {
            run("SENTIEON_BWAINDEX") {
                script "../../bwaindex/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = SENTIEON_BWAINDEX.out.index
                input[2] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                input[3] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)]
                """
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = SENTIEON_BWAINDEX.out.index
                input[2] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                input[3] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("Single-End - stub") {
        config "./nextflow.config"
        options "-stub"

        setup {
            run("SENTIEON_BWAINDEX") {
                script "../../bwaindex/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = SENTIEON_BWAINDEX.out.index
                input[2] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                input[3] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Paired-End - stub") {
        config "./nextflow.config"
        options "-stub"

        setup {
            run("SENTIEON_BWAINDEX") {
                script "../../bwaindex/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = SENTIEON_BWAINDEX.out.index
                input[2] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                input[3] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)]
                """
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = SENTIEON_BWAINDEX.out.index
                input[2] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                input[3] = [[id: 'test'],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }


}
