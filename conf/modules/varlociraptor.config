/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
        ext.when   = When to run the module.
----------------------------------------------------------------------------------------
*/

// VARLOCIRAPTOR
// Everything related to varlociraptor which is chained after the variant calling step.

process {

    // VARLOCIRAPTOR ALL
    withName: FILL_SCENARIO_FILE {
        ext.prefix = { "${meta.id}.scenario.varlociraptor" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    //
    // VCF_VARLOCIRAPTOR_GERMLINE and VCF_VARLOCIRAPTOR_TUMOR_ONLY MODULES
    //
    withName: VARLOCIRAPTOR_ESTIMATEALIGNMENTPROPERTIES {
        ext.prefix = { "${meta.id}" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_GERMLINE:RBT_VCFSPLIT|NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_TUMOR_ONLY:RBT_VCFSPLIT' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.split" }
        publishDir = [
            enabled: false
        ]
    }

    withName: VARLOCIRAPTOR_PREPROCESS {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.preprocess.${meta.chunk}" }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_GERMLINE:VARLOCIRAPTOR_CALLVARIANTS|NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_TUMOR_ONLY:VARLOCIRAPTOR_CALLVARIANTS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.call.${meta.chunk}" }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_GERMLINE:SORT_CALLED_CHUNKS|NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_TUMOR_ONLY:SORT_CALLED_CHUNKS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.sort.${meta.chunk}" }
        ext.args   = { '--output-type z --write-index=tbi' }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_GERMLINE:CONCAT_CALLED_CHUNKS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.germline.varlociraptor" }
        ext.args   = { '--allow-overlaps --output-type z --write-index=tbi' }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_TUMOR_ONLY:CONCAT_CALLED_CHUNKS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.tumor_only.varlociraptor" }
        ext.args   = { '--allow-overlaps --output-type z --write-index=tbi' }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    //
    // VCF_VARLOCIRAPTOR_SOMATIC MODULES
    //
    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:ALIGNMENTPROPERTIES_NORMAL' {
        ext.prefix = { "${meta.normal_id}.normal" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:TABIX_GERMLINE|NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:TABIX_SOMATIC' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:CONCAT_SOMATIC_STRELKA' {
        ext.prefix = { "${meta.id}.strelka" }
        ext.args   = { '--allow-overlaps --output-type z --write-index=tbi' }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/strelka/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:MERGE_GERMLINE_SOMATIC_VCFS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.merged" }
        ext.args   = { '--output-type z' }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:RBT_VCFSPLIT' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.split" }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:PREPROCESS_NORMAL' {
        ext.prefix = { "${meta.normal_id}.${meta.variantcaller}.preprocess.${meta.chunk}" }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:ALIGNMENTPROPERTIES_TUMOR' {
        ext.prefix = { "${meta.tumor_id}.tumor" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:PREPROCESS_TUMOR' {
        ext.prefix = { "${meta.tumor_id}.${meta.variantcaller}.preprocess.${meta.chunk}" }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:VARLOCIRAPTOR_CALLVARIANTS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.call.${meta.chunk}" }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:SORT_CALLED_CHUNKS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.sort.${meta.chunk}" }
        ext.args   = { '--output-type z --write-index=tbi' }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'NFCORE_SAREK:SAREK:POST_VARIANTCALLING:VCF_VARLOCIRAPTOR_SOMATIC:CONCAT_CALLED_CHUNKS' {
        ext.prefix = { "${meta.id}.${meta.variantcaller}.somatic.varlociraptor" }
        ext.args   = { '--allow-overlaps --output-type z --write-index=tbi' }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/varlociraptor/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
}
