nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    tag "pipeline_sarek"

    test("Fails with profile test | --tools vep --vep_cache_version 1") {
        when {
            params {
                modules_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/'
                outdir = "$outputDir"
                input = "${projectDir}/tests/csv/3.0/vcf_single.csv"
                step  = 'annotate'
                vep_cache = 's3://annotation-cache/vep_cache/'
                vep_cache_version = 1
                tools = 'vep'
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore: ['pipeline_info/*.{html,json,txt}'])
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            assertAll(
                { assert workflow.failed},
                { assert workflow.stdout.toString().contains("This path is not available within annotation-cache") }
            )
        }
    }
}
