def projectDir = new File('.').absolutePath

nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    tag "pipeline_sarek"
    tag "cpu"
    profile "test,spark"

    def test_scenario = [
        [
            name: "-profile test,spark --input tests/csv/3.0/fastq_tumor_only.csv --use_gatk_spark baserecalibrator,markduplicates",
            params: [
                input: "${projectDir}/tests/csv/3.0/fastq_tumor_only.csv",
                tools: null,
                use_gatk_spark: 'baserecalibrator,markduplicates'
            ]
        ],
        [
            name: "-profile test,spark --input tests/csv/3.0/fastq_tumor_only.csv --use_gatk_spark baserecalibrator,markduplicates --skip_tools fastqc,markduplicates_report,mosdepth,multiqc,samtools",
            params: [
                input: "${projectDir}/tests/csv/3.0/fastq_tumor_only.csv",
                tools: null,
                use_gatk_spark: 'baserecalibrator,markduplicates',
                skip_tools: 'fastqc,markduplicates_report,mosdepth,multiqc,samtools'
            ]
        ]
    ]

    // Generate tests for each scenario
    test_scenario.each { scenario ->
        test(scenario.name, UTILS.get_test(scenario))
    }
}
