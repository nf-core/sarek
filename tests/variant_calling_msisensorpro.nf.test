def projectDir = new File('.').absolutePath
def modules_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/'

nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    tag "pipeline_sarek"

    def test_scenario = [
        [
            name: "-profile test --tools msisensorpro somatic",
            params: [
                genome: null,
                igenomes_ignore: true,
                dbsnp: modules_testdata_base_path + '/genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz',
                dbsnp_tbi: modules_testdata_base_path + '/genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz.tbi',
                fasta: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta',
                fasta_fai: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta.fai',
                input: "${projectDir}/tests/csv/3.0/recalibrated_somatic.csv",
                intervals: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed',
                step: "variant_calling",
                tools: 'msisensorpro',
                wes: true
            ]
        ],
        [
            name: "-profile test --tools msisensorpro somatic --build_only_index --input false",
            params: [
                genome: null,
                igenomes_ignore: true,
                dbsnp: modules_testdata_base_path + '/genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz',
                dbsnp_tbi: modules_testdata_base_path + '/genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz.tbi',
                fasta: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta',
                fasta_fai: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta.fai',
                input: false,
                build_only_index: true,
                intervals: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed',
                no_intervals: true,
                step: "variant_calling",
                tools: 'msisensorpro',
                wes: true
            ]
        ],
        [
            name: "-profile test --tools msisensorpro somatic --build_only_index --input false -stub",
            params: [
                genome: null,
                igenomes_ignore: true,
                dbsnp: modules_testdata_base_path + '/genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz',
                dbsnp_tbi: modules_testdata_base_path + '/genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz.tbi',
                fasta: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta',
                fasta_fai: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta.fai',
                input: false,
                build_only_index: true,
                intervals: modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed',
                no_intervals: true,
                step: "variant_calling",
                tools: 'msisensorpro',
                wes: true
            ],
            stub: true
        ]
    ]

    test_scenario.each { scenario ->
        test(scenario.name, UTILS.get_test(scenario))
    }
}
